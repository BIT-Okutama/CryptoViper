{"ast":null,"code":"var code = {\n  initialCode: \" \\\n        #CryptoViper, a smart contract for our CryptoViper game. \\\n        \\\n        viperDNADigits: public(uint256) \\\n        dnaModulos: public(uint256) \\\n        \\\n        Viper: public(&#123; \\\n            name: bytes32, \\\n            dna: uint256 \\\n        &#125;[10]) \\\n        \\\n        @public \\\n        def __init__(): \\\n            self.viperDNADigits = 16 \\\n            self.dnaModulos = 10 ** self.viperDNADigits \\\n        \\\n        @private \\\n        def createViper(_name: bytes32, _dna: uint256): \\\n            self.Viper[0] = &#123; name: _name, dna: _dna &#125; \\\n        \\\n        #create your function here \\\n    \",\n  correctCode: \" \\\n        #CryptoViper, a smart contract for our CryptoViper game. \\\n        \\\n        viperDNADigits: public(uint256) \\\n        dnaModulos: public(uint256) \\\n        \\\n        Viper: public(&#123; \\\n            name: bytes32, \\\n            dna: uint256 \\\n        &#125;[10]) \\\n        \\\n        @public \\\n        def __init__(): \\\n            self.viperDNADigits = 16 \\\n            self.dnaModulos = 10 ** self.viperDNADigits \\\n        \\\n        @private \\\n        def createViper(_name: bytes32, _dna: uint256): \\\n            self.Viper[0] = &#123; name: _name, dna: _dna &#125; \\\n        \\\n        @private \\\n        def generateRandomDna(_str: bytes32) -> uint256: \\\n    \",\n  ABI: \"\"\n};\nexport default code;","map":{"version":3,"sources":["/Users/vincemillora/Documents/Blockchain/cryptoviper/src/BodyComponent/LessonComponent/VyperCodes/Code10.js"],"names":["code","initialCode","correctCode","ABI"],"mappings":"AAAA,IAAIA,IAAI,GAAG;AACPC,EAAAA,WAAW,EACX;;;;;;;;;;;;;;;;;;;;;KAFO;AAwBPC,EAAAA,WAAW,EACX;;;;;;;;;;;;;;;;;;;;;;KAzBO;AAgDPC,EAAAA,GAAG,EAAE;AAhDE,CAAX;AAmDA,eAAeH,IAAf","sourcesContent":["var code = {\n    initialCode:\n    \" \\\n        #CryptoViper, a smart contract for our CryptoViper game. \\\n        \\\n        viperDNADigits: public(uint256) \\\n        dnaModulos: public(uint256) \\\n        \\\n        Viper: public(&#123; \\\n            name: bytes32, \\\n            dna: uint256 \\\n        &#125;[10]) \\\n        \\\n        @public \\\n        def __init__(): \\\n            self.viperDNADigits = 16 \\\n            self.dnaModulos = 10 ** self.viperDNADigits \\\n        \\\n        @private \\\n        def createViper(_name: bytes32, _dna: uint256): \\\n            self.Viper[0] = &#123; name: _name, dna: _dna &#125; \\\n        \\\n        #create your function here \\\n    \",\n    correctCode: \n    \" \\\n        #CryptoViper, a smart contract for our CryptoViper game. \\\n        \\\n        viperDNADigits: public(uint256) \\\n        dnaModulos: public(uint256) \\\n        \\\n        Viper: public(&#123; \\\n            name: bytes32, \\\n            dna: uint256 \\\n        &#125;[10]) \\\n        \\\n        @public \\\n        def __init__(): \\\n            self.viperDNADigits = 16 \\\n            self.dnaModulos = 10 ** self.viperDNADigits \\\n        \\\n        @private \\\n        def createViper(_name: bytes32, _dna: uint256): \\\n            self.Viper[0] = &#123; name: _name, dna: _dna &#125; \\\n        \\\n        @private \\\n        def generateRandomDna(_str: bytes32) -> uint256: \\\n    \",\n    ABI: \"\"\n}\n\nexport default code;"]},"metadata":{},"sourceType":"module"}