{"ast":null,"code":"import _classCallCheck from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vincemillora/Documents/Blockchain/cryptoviper/src/BodyComponent/LessonComponent/Lesson_1.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nvar Lesson_1 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Lesson_1, _Component);\n\n  function Lesson_1() {\n    var _this;\n\n    _classCallCheck(this, Lesson_1);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Lesson_1).call(this));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Lesson_1, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"tabheader center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        class: \"tabs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        class: \"tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        class: \"active\",\n        href: \"#lessonTab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"See Instructions Here\")), React.createElement(\"li\", {\n        class: \"tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#editorTab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Write Your Answers Here\")))), React.createElement(\"div\", {\n        id: \"lessonTab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"chapterTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Chapter 1: Lesson Overview\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"In Lesson 1, you're going to build a \\\"Viper Factory\\\" to build vipers.\"), React.createElement(\"p\", {\n        class: \"indent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"# Our factory will maintain a database of all your vipers \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), \"# Our factory will have a function for creating new vipers \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), \"# Each viper will have a random and unique appearance \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"How Viper DNA Works\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"The zombie's appearance will be based on its \\\"Zombie DNA\\\". Zombie DNA is simple \\u2014 it's a 16-digit integer, like: \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"8356281049284737\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Just like real DNA, different parts of this number will map to different traits. The first 2 digits map to the viper's head type, the second 2 digits to the viper's eyes, etc.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"For example, the first 2 digits of our example DNA above are 83. To map that to the viper's head type, we do 83 % 7 + 1 = 7. So this Viper would have the 7th viper head type.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"In the answer tab, go ahead and move the head gene slider to the 7th head to see what trait the 83 would correspond to.\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Let's test it\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \" Play with the sliders on the answer tab of the page. Experiment to see how the different numerical values correspond to different aspects of the viper's appearance. \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \" When you're ready to continue, hit \\\"Next Chapter\\\" below, and let's dive into learning Vyper!\"))), React.createElement(\"footer\", {\n        class: \"footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        class: \"pagination right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        class: \"active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"1\")), React.createElement(\"li\", {\n        class: \"waves-effect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/lesson_2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"material-icons icon-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"chevron_right\"))))));\n    }\n  }]);\n\n  return Lesson_1;\n}(Component);\n\nexport default Lesson_1;","map":{"version":3,"sources":["/Users/vincemillora/Documents/Blockchain/cryptoviper/src/BodyComponent/LessonComponent/Lesson_1.js"],"names":["React","Component","Link","Lesson_1","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Lesson_1 extends Component {\n  constructor() {\n    super()\n    this.state = {\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <div class=\"body\">\n          <div class=\"tabheader center\">\n            <ul class=\"tabs\">\n              <li class=\"tab\"><a class=\"active\" href=\"#lessonTab\">See Instructions Here</a></li>\n              <li class=\"tab\"><a href=\"#editorTab\">Write Your Answers Here</a></li>\n            </ul>\n          </div>\n\n          <div id=\"lessonTab\">\n            <h5 class=\"chapterTitle\">Chapter 1: Lesson Overview</h5>\n            <p>In Lesson 1, you're going to build a \"Viper Factory\" to build vipers.</p>\n            <p class=\"indent\">\n                # Our factory will maintain a database of all your vipers <br></br>\n                # Our factory will have a function for creating new vipers <br></br>\n                # Each viper will have a random and unique appearance <br></br>\n            </p>\n\n            <br></br>\n            <h5>How Viper DNA Works</h5>\n            <p>The zombie's appearance will be based on its \"Zombie DNA\". Zombie DNA is simple — it's a 16-digit integer, like: <div class=\"types\">8356281049284737</div></p>\n            <p>Just like real DNA, different parts of this number will map to different traits. The first 2 digits map to the viper's head type, the second 2 digits to the viper's eyes, etc.</p>\n            <p>For example, the first 2 digits of our example DNA above are 83. To map that to the viper's head type, we do 83 % 7 + 1 = 7. So this Viper would have the 7th viper head type.</p>\n            <p>In the answer tab, go ahead and move the head gene slider to the 7th head to see what trait the 83 would correspond to.</p>\n\n            <br></br>\n            <h5>Let's test it</h5>\n            <p> Play with the sliders on the answer tab of the page. Experiment to see how the different numerical values correspond to different aspects of the viper's appearance. </p>\n            <p> When you're ready to continue, hit \"Next Chapter\" below, and let's dive into learning Vyper!</p>\n          </div>\n        </div>\n        \n        <footer class=\"footer\">\n          <ul class=\"pagination right\">\n            <li class=\"active\"><a>1</a></li>\n            <li class=\"waves-effect\"><Link to=\"/lesson_2\" ><i class=\"material-icons icon-white\">chevron_right</i></Link></li>\n          </ul>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Lesson_1;"]},"metadata":{},"sourceType":"module"}