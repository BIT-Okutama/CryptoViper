{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\empty\\\\Documents\\\\IT\\\\CryptoViper\\\\cryptoviper\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\empty\\\\Documents\\\\IT\\\\CryptoViper\\\\cryptoviper\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\empty\\\\Documents\\\\IT\\\\CryptoViper\\\\cryptoviper\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\empty\\\\Documents\\\\IT\\\\CryptoViper\\\\cryptoviper\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\empty\\\\Documents\\\\IT\\\\CryptoViper\\\\cryptoviper\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\empty\\\\Documents\\\\IT\\\\CryptoViper\\\\cryptoviper\\\\src\\\\BodyComponent\\\\LessonComponent\\\\Lesson_4.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nvar Lesson_4 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Lesson_4, _Component);\n\n  function Lesson_4() {\n    _classCallCheck(this, Lesson_4);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Lesson_4).apply(this, arguments));\n  }\n\n  _createClass(Lesson_4, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"lesson\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"lessonbody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"chapterTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, \" Chapter 5: List \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \" When you want a collection of something, you can use a \", React.createElement(\"div\", {\n        class: \"terms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"list\"), \". Basically, list are the same as \", React.createElement(\"div\", {\n        class: \"terms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"arrays\"), \". There is only one type of list in Vyper: \", React.createElement(\"div\", {\n        class: \"terms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"fixed-sized\"), \" list\"), React.createElement(\"div\", {\n        class: \"codeblock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        class: \"codes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"comments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"# Integer List with a length of 2 elements:\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }), \"integerList: \", React.createElement(\"div\", {\n        class: \"views\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"public\"), \"(\", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"uint256\"), \"[5]) \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"comments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"# String List with a length of 5 elements:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }), \"stringList: \", React.createElement(\"div\", {\n        class: \"views\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"public\"), \"(\", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"bytes32\"), \"[5])\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"You can also create an array of structs. Using the previous chapter's \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Person\"), \" struct:\"), React.createElement(\"div\", {\n        class: \"codeblock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        class: \"codes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"comments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"# Struct List with a length of 10 elements:\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), \"Person: \", React.createElement(\"div\", {\n        class: \"views\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"public\"), \"({ \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), \"age: \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"uint256\"), \", \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), \"name: \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"bytes32\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), \"}[10])\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Remember that state variables are stored permanently in the Blockchain? So creating a list of structs like this can be useful for storing structured data in your contract, kind of like a database.\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Let's test it\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \" We're going to want to make several vipers. It is good to use a list of structs for this goal. \"), React.createElement(\"p\", {\n        class: \"indent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \" 1. Create a list of \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Viper\"), \" structs. Name it \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Vipers\"), \". \"))), React.createElement(\"div\", {\n        class: \"editor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"footer\", {\n        class: \"footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        class: \"pagination right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        class: \"waves-effect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/lesson_3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"chevron_left\"))), React.createElement(\"li\", {\n        class: \"active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"5\")), React.createElement(\"li\", {\n        class: \"waves-effect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/lesson_5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"chevron_right\"))))));\n    }\n  }]);\n\n  return Lesson_4;\n}(Component);\n\nexport default Lesson_4;","map":{"version":3,"sources":["C:\\Users\\empty\\Documents\\IT\\CryptoViper\\cryptoviper\\src\\BodyComponent\\LessonComponent\\Lesson_4.js"],"names":["React","Component","Link","Lesson_4"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Lesson_4 extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div class=\"lesson\">\r\n          <div class=\"lessonbody\">\r\n            <h5 class=\"chapterTitle\"> Chapter 5: List </h5>\r\n            <p> When you want a collection of something, you can use a <div class=\"terms\">list</div>. Basically, list are the same as <div class=\"terms\">arrays</div>. There is only one type of list in Vyper: <div class=\"terms\">fixed-sized</div> list</p>\r\n            \r\n            <div class=\"codeblock\">\r\n              <p class=\"codes\">\r\n                <div class=\"comments\"># Integer List with a length of 2 elements:</div> <br></br>\r\n                integerList: <div class=\"views\">public</div>(<div class=\"types\">uint256</div>[5]) <br></br>\r\n                <div class=\"comments\"># String List with a length of 5 elements:</div><br></br>\r\n                stringList: <div class=\"views\">public</div>(<div class=\"types\">bytes32</div>[5])\r\n              </p>\r\n            </div>\r\n\r\n            <p>You can also create an array of structs. Using the previous chapter's <div class=\"types\">Person</div> struct:</p>\r\n            <div class=\"codeblock\">\r\n              <p class=\"codes\">\r\n              <div class=\"comments\"># Struct List with a length of 10 elements:</div> <br></br>\r\n                  Person: <div class=\"views\">public</div>(&#123; <br></br>\r\n                  age: <div class=\"types\">uint256</div>, <br></br>\r\n                  name: <div class=\"types\">bytes32</div> <br></br>\r\n                  &#125;[10])\r\n              </p>\r\n            </div>\r\n            <p>Remember that state variables are stored permanently in the Blockchain? So creating a list of structs like this can be useful for storing structured data in your contract, kind of like a database.</p>\r\n            \r\n            <br></br>\r\n            <h5>Let's test it</h5>\r\n            <p> We're going to want to make several vipers. It is good to use a list of structs for this goal. </p>\r\n\r\n            <p class=\"indent\"> 1. Create a list of <div class=\"types\">Viper</div> structs. Name it <div class=\"types\">Vipers</div>. </p>\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"editor\">\r\n        </div>\r\n        <footer class=\"footer\">\r\n          <ul class=\"pagination right\">\r\n            <li class=\"waves-effect\"><Link to=\"/lesson_3\" ><i class=\"material-icons\">chevron_left</i></Link></li>\r\n            <li class=\"active\"><a href=\"#!\">5</a></li>\r\n            <li class=\"waves-effect\"><Link to=\"/lesson_5\" ><i class=\"material-icons\">chevron_right</i></Link></li>\r\n        </ul>\r\n        </footer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Lesson_4;"]},"metadata":{},"sourceType":"module"}