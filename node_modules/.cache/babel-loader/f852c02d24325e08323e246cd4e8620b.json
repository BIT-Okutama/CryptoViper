{"ast":null,"code":"import _classCallCheck from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vincemillora/Documents/Blockchain/cryptoviper/src/BodyComponent/LessonComponent/Lesson_3.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport code from './VyperCodes/Code3';\nimport Web3 from 'web3';\nimport contract from '../../Contract/Contract';\n\nvar Lesson_3 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Lesson_3, _Component);\n\n  function Lesson_3() {\n    var _this;\n\n    _classCallCheck(this, Lesson_3);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Lesson_3).call(this));\n    _this.state = {}; //Initializes the Web3 connection instance.\n\n    if (typeof window.web3 != 'undefined') {\n      console.log(\"Using web3 detected from external source like Metamask\");\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.web3 = new Web3(new Web3.providers.HttpProvider(\"http://localhost:8545\"));\n    } //Sets the account, for it to be recognized by Metamask \n\n\n    window.web3.eth.defaultAccount = window.web3.eth.accounts[0]; //Sets the contract connection for the instance.\n\n    var MyContract = window.web3.eth.contract(contract.ABI);\n    _this.state.ContractInstance = MyContract.at(contract.address);\n    return _this;\n  }\n\n  _createClass(Lesson_3, [{\n    key: \"handleSubmitPosition\",\n    value: function handleSubmitPosition(e) {\n      var result = this.refs.ABI.innerText.localeCompare(code.ABI);\n      if (result == 0) alert(\"You are right! You can proceed to the next level. \");else alert(\"You are wrong! Please read the instructions and code again. \");\n      e.preventDefault();\n    }\n  }, {\n    key: \"handleNextLevel\",\n    value: function handleNextLevel(e) {\n      this.state.ContractInstance.updatePlayerLevel(parseInt(3), {\n        gas: 300000\n      }, function (err, result) {\n        console.log(result);\n      });\n      e.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"tabheader center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        class: \"tabs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        class: \"tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        class: \"active\",\n        href: \"#lessonTab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"See Instructions Here\")), React.createElement(\"li\", {\n        class: \"tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#editorTab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Write Your Answers Here\")))), React.createElement(\"div\", {\n        id: \"lessonTab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"chapterTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \" Chapter 3: State Variables & Integers \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \" Great Job! Let's formally start our Smart Contract. \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \" Vyper is a \", React.createElement(\"div\", {\n        class: \"terms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"statically typed language\"), \", which means that the type of each variable (state and local) needs to be specified or at least known at compile-time. \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \" \", React.createElement(\"div\", {\n        class: \"terms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"State variables\"), \" are values which are permanently stored in contract storage. This means they're written to the Ethereum blockchain.\"), React.createElement(\"div\", {\n        class: \"codeblock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        class: \"codes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"comments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \" # This will be stored permanently in the blockchain \"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"mySignedInteger: \"), \" int128 \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"myUnsignedInteger: \"), \" uint256 \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \" In this example contract, we created a \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"int128\"), \" called \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"mySignedInteger\"), \" and a \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"uint256\"), \" called \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"myUnsignedInteger\"), \". \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \" Signed Integers: \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"int128\"), \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"A \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"signed integer (128 bit)\"), \" is a type to store \", React.createElement(\"div\", {\n        class: \"bolds\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"positive\"), \" and \", React.createElement(\"div\", {\n        class: \"bolds\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"negative\"), \" integers. \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \" Unsigned Integers: \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"int256\"), \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"A \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"unsigned integer (256 bit)\"), \" is a type to store \", React.createElement(\"div\", {\n        class: \"bolds\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"non-negative\"), \" integers. \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Let's test it\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Our Viper DNA will be determing using a 16-digit number. \"), React.createElement(\"p\", {\n        class: \"indent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \" 1. Declare a \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"uint256\"), \" integer and name it \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"viperDNADigits\"), \". \")), React.createElement(\"div\", {\n        class: \"forms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmitPosition.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"editorTab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \" This is the editor, you can type your answer here. If your answer is correct, you can proceed to the next level. Good luck!\"), React.createElement(\"div\", {\n        class: \"editorBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"tab-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"tab-pane active\",\n        id: \"editorTab\",\n        role: \"tabpanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        ref: \"usercode\",\n        id: \"editor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, code.initialCode)))), React.createElement(\"button\", {\n        type: \"submit\",\n        class: \"cbtn right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        type: \"button\",\n        id: \"compileBtn\",\n        class: \"cbtn2 right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Compile\"), React.createElement(\"div\", {\n        ref: \"ABI\",\n        id: \"abiCompact\",\n        class: \"abi-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }))))), React.createElement(\"footer\", {\n        class: \"footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        class: \"pagination right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        class: \"waves-effect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/lesson_2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"material-icons icon-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"chevron_left\"))), React.createElement(\"li\", {\n        class: \"active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"3\")), React.createElement(\"li\", {\n        class: \"waves-effect\",\n        onClick: this.handleNextLevel.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/lesson_4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"material-icons icon-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"chevron_right\"))))));\n    }\n  }]);\n\n  return Lesson_3;\n}(Component);\n\nexport default Lesson_3;","map":{"version":3,"sources":["/Users/vincemillora/Documents/Blockchain/cryptoviper/src/BodyComponent/LessonComponent/Lesson_3.js"],"names":["React","Component","Link","code","Web3","contract","Lesson_3","state","window","web3","console","log","currentProvider","providers","HttpProvider","eth","defaultAccount","accounts","MyContract","ABI","ContractInstance","at","address","e","result","refs","innerText","localeCompare","alert","preventDefault","updatePlayerLevel","parseInt","gas","err","handleSubmitPosition","bind","initialCode","handleNextLevel"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport code from './VyperCodes/Code3';\nimport Web3 from 'web3';\nimport contract from '../../Contract/Contract';\n\nclass Lesson_3 extends Component {\n  constructor() {\n    super()\n    this.state = {\n    };\n\n     //Initializes the Web3 connection instance.\n     if(typeof window.web3 != 'undefined'){\n      console.log(\"Using web3 detected from external source like Metamask\");\n      window.web3 = new Web3(window.web3.currentProvider);\n    }\n    \n    else {\n      window.web3 = new Web3(new \n      Web3.providers.HttpProvider(\"http://localhost:8545\"));\n    }\n\n    //Sets the account, for it to be recognized by Metamask \n    window.web3.eth.defaultAccount = window.web3.eth.accounts[0]\n\n    //Sets the contract connection for the instance.\n    const MyContract = window.web3.eth.contract(contract.ABI);\n    this.state.ContractInstance = MyContract.at(contract.address);\n  }\n\n  handleSubmitPosition(e) {\n    var result = this.refs.ABI.innerText.localeCompare(code.ABI);\n    if(result == 0)\n      alert(\"You are right! You can proceed to the next level. \");\n    else\n      alert(\"You are wrong! Please read the instructions and code again. \");\n    e.preventDefault();\n  }\n\n  handleNextLevel(e) {\n    this.state.ContractInstance.updatePlayerLevel(\n      parseInt(3), {gas: 300000}, (err,result) => \n      {console.log(result);})\n      e.preventDefault();\n  }\n  \n  render() {\n    return (\n      <div>\n        <div class=\"body\">\n          <div class=\"tabheader center\">\n            <ul class=\"tabs\">\n              <li class=\"tab\"><a class=\"active\" href=\"#lessonTab\">See Instructions Here</a></li>\n              <li class=\"tab\"><a href=\"#editorTab\">Write Your Answers Here</a></li>\n            </ul>\n          </div>\n\n          <div id=\"lessonTab\">\n            <h5 class=\"chapterTitle\"> Chapter 3: State Variables & Integers </h5>\n            <p> Great Job! Let's formally start our Smart Contract. </p>\n            <p> Vyper is a <div class=\"terms\">statically typed language</div>, which means that the type of each variable (state and local) needs to be specified or at least known at compile-time. </p>\n            <p> <div class=\"terms\">State variables</div> are values which are permanently stored in contract storage. This means they're written to the Ethereum blockchain.</p>\n            \n            <div class=\"codeblock\">\n              <p class=\"codes\"> \n                <div class=\"comments\"> # This will be stored permanently in the blockchain </div> <br></br>\n                <div class=\"types\">mySignedInteger: </div> int128 <br></br>\n                <div class=\"types\">myUnsignedInteger: </div> uint256 <br></br>\n              </p>\n            </div>\n\n            <p> In this example contract, we created a <div class=\"types\">int128</div> called <div class=\"types\">mySignedInteger</div> and a <div class=\"types\">uint256</div> called <div class=\"types\">myUnsignedInteger</div>. </p>\n            \n            <br></br>\n            <h5> Signed Integers: <div class=\"types\">int128</div> </h5>\n            <p>A <div class=\"types\">signed integer (128 bit)</div> is a type to store <div class=\"bolds\">positive</div> and <div class=\"bolds\">negative</div> integers. </p>\n\n            <br></br>\n            <h5> Unsigned Integers: <div class=\"types\">int256</div> </h5>\n            <p>A <div class=\"types\">unsigned integer (256 bit)</div> is a type to store <div class=\"bolds\">non-negative</div> integers. </p>\n\n            <br></br>\n            <h5>Let's test it</h5>\n            <p>Our Viper DNA will be determing using a 16-digit number. </p>\n            <p class=\"indent\"> 1. Declare a <div class=\"types\">uint256</div> integer and name it <div class=\"types\">viperDNADigits</div>. </p>\n          </div>\n\n          <div class=\"forms\">\n            <form onSubmit={this.handleSubmitPosition.bind(this)}>\n              <div id=\"editorTab\">\n                <p> This is the editor, you can type your answer here. If your answer is correct, you can proceed to the next level. Good luck!</p>\n                <div class=\"editorBox\">\n                    <div class=\"tab-content\">\n                      <div class=\"tab-pane active\" id=\"editorTab\" role=\"tabpanel\">\n                        <div ref=\"usercode\" id=\"editor\">{ code.initialCode }</div>\n                      </div>\n                    </div>\n                </div>\n\n                <button type=\"submit\" class=\"cbtn right\">Submit</button>\n                <button type=\"button\" id=\"compileBtn\" class=\"cbtn2 right\">Compile</button>\n\n                <div ref=\"ABI\" id=\"abiCompact\" class=\"abi-box\"></div>\n              </div>\n            </form>\n          </div>\n        </div>\n\n        <footer class=\"footer\">\n          <ul class=\"pagination right\">\n            <li class=\"waves-effect\"><Link to=\"/lesson_2\" ><i class=\"material-icons icon-white\">chevron_left</i></Link></li>\n            <li class=\"active\"><a>3</a></li>\n            <li class=\"waves-effect\" onClick={this.handleNextLevel.bind(this)}><Link to=\"/lesson_4\" ><i class=\"material-icons icon-white\">chevron_right</i></Link></li>\n        </ul>\n        </footer>\n      </div>\n    )\n  }\n}\nexport default Lesson_3;"]},"metadata":{},"sourceType":"module"}