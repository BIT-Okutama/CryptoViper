{"ast":null,"code":"import _classCallCheck from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vincemillora/Documents/Blockchain/cryptoviper/src/BodyComponent/Certificate.js\";\nimport React, { Component } from 'react';\n\nvar Certificate =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Certificate, _Component);\n\n  function Certificate() {\n    var _this;\n\n    _classCallCheck(this, Certificate);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Certificate).call(this));\n    _this.state = {\n      rank: 0 //Initializes the Web3 connection instance.\n\n    };\n\n    if (typeof window.web3 != 'undefined') {\n      console.log(\"Using web3 detected from external source like Metamask\");\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.web3 = new Web3(new Web3.providers.HttpProvider(\"http://localhost:8545\"));\n    } //Sets the account, for it to be recognized by Metamask \n\n\n    window.web3.eth.defaultAccount = window.web3.eth.accounts[0]; //Sets the contract connection for the instance.\n\n    var MyContract = window.web3.eth.contract(contract.ABI);\n    _this.state.ContractInstance = MyContract.at(contract.address); // this.state.ContractInstance.addPlayer(\n    //   {gas: 300000}, (err,result) => \n    //   {console.log(result);})\n\n    return _this;\n  }\n\n  _createClass(Certificate, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        class: \"homepage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Certificate;\n}(Component);\n\nexport default Certificate;","map":{"version":3,"sources":["/Users/vincemillora/Documents/Blockchain/cryptoviper/src/BodyComponent/Certificate.js"],"names":["React","Component","Certificate","state","rank","window","web3","console","log","Web3","currentProvider","providers","HttpProvider","eth","defaultAccount","accounts","MyContract","contract","ABI","ContractInstance","at","address"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,W;;;;;AACF,yBAAa;AAAA;;AAAA;;AACT;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,CADG,CAIb;;AAJa,KAAb;;AAKA,QAAG,OAAOC,MAAM,CAACC,IAAd,IAAsB,WAAzB,EAAqC;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAY,wDAAZ;AACAH,MAAAA,MAAM,CAACC,IAAP,GAAc,IAAIG,IAAJ,CAASJ,MAAM,CAACC,IAAP,CAAYI,eAArB,CAAd;AACD,KAHD,MAKK;AACHL,MAAAA,MAAM,CAACC,IAAP,GAAc,IAAIG,IAAJ,CAAS,IACvBA,IAAI,CAACE,SAAL,CAAeC,YADQ,CACK,uBADL,CAAT,CAAd;AAED,KAfQ,CAiBT;;;AACAP,IAAAA,MAAM,CAACC,IAAP,CAAYO,GAAZ,CAAgBC,cAAhB,GAAiCT,MAAM,CAACC,IAAP,CAAYO,GAAZ,CAAgBE,QAAhB,CAAyB,CAAzB,CAAjC,CAlBS,CAoBT;;AACA,QAAMC,UAAU,GAAGX,MAAM,CAACC,IAAP,CAAYO,GAAZ,CAAgBI,QAAhB,CAAyBA,QAAQ,CAACC,GAAlC,CAAnB;AACA,UAAKf,KAAL,CAAWgB,gBAAX,GAA8BH,UAAU,CAACI,EAAX,CAAcH,QAAQ,CAACI,OAAvB,CAA9B,CAtBS,CAwBV;AACA;AACA;;AA1BU;AA2BV;;;;6BAEI;AACP,aACE;AAAK,QAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAKD;;;;EApCuBpB,S;;AAsC1B,eAAeC,WAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Certificate extends Component {\n    constructor(){\n        super();\n        this.state = {\n            rank: 0\n        }\n    \n        //Initializes the Web3 connection instance.\n        if(typeof window.web3 != 'undefined'){\n          console.log(\"Using web3 detected from external source like Metamask\");\n          window.web3 = new Web3(window.web3.currentProvider);\n        }\n        \n        else {\n          window.web3 = new Web3(new \n          Web3.providers.HttpProvider(\"http://localhost:8545\"));\n        }\n    \n        //Sets the account, for it to be recognized by Metamask \n        window.web3.eth.defaultAccount = window.web3.eth.accounts[0]\n    \n        //Sets the contract connection for the instance.\n        const MyContract = window.web3.eth.contract(contract.ABI);\n        this.state.ContractInstance = MyContract.at(contract.address);\n        \n       // this.state.ContractInstance.addPlayer(\n       //   {gas: 300000}, (err,result) => \n       //   {console.log(result);})\n      }\n\n  render() {\n    return (\n      <div class=\"homepage\">\n        \n      </div>\n    )\n  }\n}\nexport default Certificate;"]},"metadata":{},"sourceType":"module"}