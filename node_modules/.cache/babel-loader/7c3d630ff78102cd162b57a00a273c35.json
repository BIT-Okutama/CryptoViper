{"ast":null,"code":"var code = {\n  initialCode: \" \\\n        #CryptoViper, a smart contract for our CryptoViper game. \\\n        \\\n        viperDNADigits: public(uint256) \\\n        dnaModulos: public(uint256) \\\n        \\\n        Viper: public(&#123; \\\n            name: bytes32, \\\n            dna: uint256 \\\n        &#125;[10]) \\\n        \\\n        @public \\\n        def __init__(): \\\n            self.viperDNADigits = 16 \\\n            self.dnaModulos = 10 ** self.viperDNADigits \\\n        \\\n        @private \\\n        def createViper(_name: bytes32, _dna: uint256): \\\n            self.Viper[0] = &#123; name: _name, dna: _dna &#125; \\\n        \\\n        @private \\\n        def generateRandomDna(_str: bytes32) -> uint256: \\\n            #write the function's code here \\\n    \",\n  correctCode: \" \\\n        #CryptoViper, a smart contract for our CryptoViper game. \\\n        \\\n        viperDNADigits: public(uint256) \\\n        dnaModulos: public(uint256) \\\n        \\\n        Viper: public(&#123; \\\n            name: bytes32, \\\n            dna: uint256 \\\n        &#125;[10]) \\\n        \\\n        @public \\\n        def __init__(): \\\n            self.viperDNADigits = 16 \\\n            self.dnaModulos = 10 ** self.viperDNADigits \\\n        \\\n        @private \\\n        def createViper(_name: bytes32, _dna: uint256): \\\n            self.Viper[0] = &#123; name: _name, dna: _dna &#125; \\\n        \\\n        @private \\\n        def generateRandomDna(_str: bytes32) -> uint256: \\\n            rand: uint256 \\\n            rand = convert(sha3(_str), 'uint256') \\\n            return rand % self.dnaModulos \\\n    \",\n  ABI: '[{\"name\": \"__init__\", \"outputs\": [], \"inputs\": [], \"constant\": false, \"payable\": false, \"type\": \"constructor\"}, {\"name\": \"createViper\", \"outputs\": [], \"inputs\": [{\"type\": \"bytes32\", \"name\": \"_name\"}, {\"type\": \"uint256\", \"name\": \"_dna\"}], \"constant\": false, \"payable\": false, \"type\": \"function\", \"gas\": 70539}, {\"name\": \"generateRandomDna\", \"outputs\": [{\"type\": \"uint256\", \"name\": \"out\"}], \"inputs\": [{\"type\": \"bytes32\", \"name\": \"_str\"}], \"constant\": false, \"payable\": false, \"type\": \"function\", \"gas\": 947}, {\"name\": \"viperDNADigits\", \"outputs\": [{\"type\": \"uint256\", \"name\": \"out\"}], \"inputs\": [], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 543}, {\"name\": \"dnaModulos\", \"outputs\": [{\"type\": \"uint256\", \"name\": \"out\"}], \"inputs\": [], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 573}, {\"name\": \"Viper__name\", \"outputs\": [{\"type\": \"bytes32\", \"name\": \"out\"}], \"inputs\": [{\"type\": \"int128\", \"name\": \"arg0\"}], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 898}, {\"name\": \"Viper__dna\", \"outputs\": [{\"type\": \"uint256\", \"name\": \"out\"}], \"inputs\": [{\"type\": \"int128\", \"name\": \"arg0\"}], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 922}]'\n};\nexport default code;","map":{"version":3,"sources":["/Users/vincemillora/Documents/Blockchain/cryptoviper/src/BodyComponent/LessonComponent/VyperCodes/Code11.js"],"names":["code","initialCode","correctCode","ABI"],"mappings":"AAAA,IAAIA,IAAI,GAAG;AACPC,EAAAA,WAAW,EACX;;;;;;;;;;;;;;;;;;;;;;;KAFO;AA0BPC,EAAAA,WAAW,EACX;;;;;;;;;;;;;;;;;;;;;;;;;KA3BO;AAqDPC,EAAAA,GAAG,EAAE;AArDE,CAAX;AAwDA,eAAeH,IAAf","sourcesContent":["var code = {\n    initialCode:\n    \" \\\n        #CryptoViper, a smart contract for our CryptoViper game. \\\n        \\\n        viperDNADigits: public(uint256) \\\n        dnaModulos: public(uint256) \\\n        \\\n        Viper: public(&#123; \\\n            name: bytes32, \\\n            dna: uint256 \\\n        &#125;[10]) \\\n        \\\n        @public \\\n        def __init__(): \\\n            self.viperDNADigits = 16 \\\n            self.dnaModulos = 10 ** self.viperDNADigits \\\n        \\\n        @private \\\n        def createViper(_name: bytes32, _dna: uint256): \\\n            self.Viper[0] = &#123; name: _name, dna: _dna &#125; \\\n        \\\n        @private \\\n        def generateRandomDna(_str: bytes32) -> uint256: \\\n            #write the function's code here \\\n    \",\n    correctCode: \n    \" \\\n        #CryptoViper, a smart contract for our CryptoViper game. \\\n        \\\n        viperDNADigits: public(uint256) \\\n        dnaModulos: public(uint256) \\\n        \\\n        Viper: public(&#123; \\\n            name: bytes32, \\\n            dna: uint256 \\\n        &#125;[10]) \\\n        \\\n        @public \\\n        def __init__(): \\\n            self.viperDNADigits = 16 \\\n            self.dnaModulos = 10 ** self.viperDNADigits \\\n        \\\n        @private \\\n        def createViper(_name: bytes32, _dna: uint256): \\\n            self.Viper[0] = &#123; name: _name, dna: _dna &#125; \\\n        \\\n        @private \\\n        def generateRandomDna(_str: bytes32) -> uint256: \\\n            rand: uint256 \\\n            rand = convert(sha3(_str), 'uint256') \\\n            return rand % self.dnaModulos \\\n    \",\n    ABI: '[{\"name\": \"__init__\", \"outputs\": [], \"inputs\": [], \"constant\": false, \"payable\": false, \"type\": \"constructor\"}, {\"name\": \"createViper\", \"outputs\": [], \"inputs\": [{\"type\": \"bytes32\", \"name\": \"_name\"}, {\"type\": \"uint256\", \"name\": \"_dna\"}], \"constant\": false, \"payable\": false, \"type\": \"function\", \"gas\": 70539}, {\"name\": \"generateRandomDna\", \"outputs\": [{\"type\": \"uint256\", \"name\": \"out\"}], \"inputs\": [{\"type\": \"bytes32\", \"name\": \"_str\"}], \"constant\": false, \"payable\": false, \"type\": \"function\", \"gas\": 947}, {\"name\": \"viperDNADigits\", \"outputs\": [{\"type\": \"uint256\", \"name\": \"out\"}], \"inputs\": [], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 543}, {\"name\": \"dnaModulos\", \"outputs\": [{\"type\": \"uint256\", \"name\": \"out\"}], \"inputs\": [], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 573}, {\"name\": \"Viper__name\", \"outputs\": [{\"type\": \"bytes32\", \"name\": \"out\"}], \"inputs\": [{\"type\": \"int128\", \"name\": \"arg0\"}], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 898}, {\"name\": \"Viper__dna\", \"outputs\": [{\"type\": \"uint256\", \"name\": \"out\"}], \"inputs\": [{\"type\": \"int128\", \"name\": \"arg0\"}], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 922}]'\n}\n\nexport default code;"]},"metadata":{},"sourceType":"module"}