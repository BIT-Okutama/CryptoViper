{"ast":null,"code":"var code = {\n  initialCode: \"\\\n#CryptoViper, a smart contract for our CryptoViper game.\\n\\n\\\n\\\nviperDNADigits: public(uint256)\\n\\\ndnaModulos: public(uint256)\\n\\n\\\n\\\nViper: public({\\n\\\n    name: bytes32,\\n\\\n    dna: uint256\\n\\\n}[10])\\n\\n\\\n\\\n@public\\n\\\ndef __init__():\\n\\\n    self.viperDNADigits = 16\\n\\\n    self.dnaModulos = 10 ** self.viperDNADigits\\n\\n\\\n\\\n@private\\n\\\ndef createViper(_name: bytes32, _dna: uint256):\\n\\\n    self.Viper[0] = &#123; name: _name, dna: _dna &#125;\\n\\n\\\n\\\n@private\\n\\\ndef generateRandomDna(_str: bytes32) -> uint256:\\n\\\n    rand: uint256\\n\\\n    rand = convert(sha3(_str), 'uint256')\\n\\\n    return rand % self.dnaModulos\\n\\n\\\n\\\n#write the function here\\\n\",\n  correctCode: \" \\\n#CryptoViper, a smart contract for our CryptoViper game.\\n\\n\\\n\\\nviperDNADigits: public(uint256)\\n\\\ndnaModulos: public(uint256)\\n\\n\\\n\\\nViper: public({\\n\\\n    name: bytes32,\\n\\\n    dna: uint256\\n\\\n}[10])\\n\\n\\\n\\\n@public\\n\\\ndef __init__():\\n\\\n    self.viperDNADigits = 16\\n\\\n    self.dnaModulos = 10 ** self.viperDNADigits\\n\\n\\\n\\\n@private\\n\\\ndef createViper(_name: bytes32, _dna: uint256):\\n\\\n    self.Viper[0] = &#123; name: _name, dna: _dna &#125;\\n\\n\\\n\\\n@private\\n\\\ndef generateRandomDna(_str: bytes32) -> uint256:\\n\\\n    rand: uint256\\n\\\n    rand = convert(sha3(_str), 'uint256')\\n\\\n    return rand % self.dnaModulos\\n\\n\\\n\\\n@public\\n\\\ndef createRandomZombie(_name: bytes32):\\n\\\n    randDna: uint256\\n\\\n    randDna = self.generateRandomDna(_name)\\n\\\n    self.createViper(_name, randDna)\\n\\\n\",\n  ABI: '[{\"name\": \"__init__\", \"outputs\": [], \"inputs\": [], \"constant\": false, \"payable\": false, \"type\": \"constructor\"}, {\"name\": \"createRandomZombie\", \"outputs\": [], \"inputs\": [{\"type\": \"bytes32\", \"name\": \"_name\"}], \"constant\": false, \"payable\": false, \"type\": \"function\", \"gas\": 73849}, {\"name\": \"viperDNADigits\", \"outputs\": [{\"type\": \"uint256\", \"name\": \"out\"}], \"inputs\": [], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 573}, {\"name\": \"dnaModulos\", \"outputs\": [{\"type\": \"uint256\", \"name\": \"out\"}], \"inputs\": [], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 603}, {\"name\": \"Viper__name\", \"outputs\": [{\"type\": \"bytes32\", \"name\": \"out\"}], \"inputs\": [{\"type\": \"int128\", \"name\": \"arg0\"}], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 928}, {\"name\": \"Viper__dna\", \"outputs\": [{\"type\": \"uint256\", \"name\": \"out\"}], \"inputs\": [{\"type\": \"int128\", \"name\": \"arg0\"}], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 952}]'\n};\nexport default code;","map":{"version":3,"sources":["/Users/vincemillora/Documents/Blockchain/cryptoviper/src/BodyComponent/LessonComponent/VyperCodes/Code12.js"],"names":["code","initialCode","correctCode","ABI"],"mappings":"AAAA,IAAIA,IAAI,GAAG;AACPC,EAAAA,WAAW,EACX;;;;;;;;;;;;;;;;;;;;;;;;;;;CAFO;AA8BPC,EAAAA,WAAW,EACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA/BO;AA+DPC,EAAAA,GAAG,EAAE;AA/DE,CAAX;AAkEA,eAAeH,IAAf","sourcesContent":["var code = {\n    initialCode:\n    \"\\\n#CryptoViper, a smart contract for our CryptoViper game.\\n\\n\\\n\\\nviperDNADigits: public(uint256)\\n\\\ndnaModulos: public(uint256)\\n\\n\\\n\\\nViper: public({\\n\\\n    name: bytes32,\\n\\\n    dna: uint256\\n\\\n}[10])\\n\\n\\\n\\\n@public\\n\\\ndef __init__():\\n\\\n    self.viperDNADigits = 16\\n\\\n    self.dnaModulos = 10 ** self.viperDNADigits\\n\\n\\\n\\\n@private\\n\\\ndef createViper(_name: bytes32, _dna: uint256):\\n\\\n    self.Viper[0] = &#123; name: _name, dna: _dna &#125;\\n\\n\\\n\\\n@private\\n\\\ndef generateRandomDna(_str: bytes32) -> uint256:\\n\\\n    rand: uint256\\n\\\n    rand = convert(sha3(_str), 'uint256')\\n\\\n    return rand % self.dnaModulos\\n\\n\\\n\\\n#write the function here\\\n\",\n    correctCode: \n    \" \\\n#CryptoViper, a smart contract for our CryptoViper game.\\n\\n\\\n\\\nviperDNADigits: public(uint256)\\n\\\ndnaModulos: public(uint256)\\n\\n\\\n\\\nViper: public({\\n\\\n    name: bytes32,\\n\\\n    dna: uint256\\n\\\n}[10])\\n\\n\\\n\\\n@public\\n\\\ndef __init__():\\n\\\n    self.viperDNADigits = 16\\n\\\n    self.dnaModulos = 10 ** self.viperDNADigits\\n\\n\\\n\\\n@private\\n\\\ndef createViper(_name: bytes32, _dna: uint256):\\n\\\n    self.Viper[0] = &#123; name: _name, dna: _dna &#125;\\n\\n\\\n\\\n@private\\n\\\ndef generateRandomDna(_str: bytes32) -> uint256:\\n\\\n    rand: uint256\\n\\\n    rand = convert(sha3(_str), 'uint256')\\n\\\n    return rand % self.dnaModulos\\n\\n\\\n\\\n@public\\n\\\ndef createRandomZombie(_name: bytes32):\\n\\\n    randDna: uint256\\n\\\n    randDna = self.generateRandomDna(_name)\\n\\\n    self.createViper(_name, randDna)\\n\\\n\",\n    ABI: '[{\"name\": \"__init__\", \"outputs\": [], \"inputs\": [], \"constant\": false, \"payable\": false, \"type\": \"constructor\"}, {\"name\": \"createRandomZombie\", \"outputs\": [], \"inputs\": [{\"type\": \"bytes32\", \"name\": \"_name\"}], \"constant\": false, \"payable\": false, \"type\": \"function\", \"gas\": 73849}, {\"name\": \"viperDNADigits\", \"outputs\": [{\"type\": \"uint256\", \"name\": \"out\"}], \"inputs\": [], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 573}, {\"name\": \"dnaModulos\", \"outputs\": [{\"type\": \"uint256\", \"name\": \"out\"}], \"inputs\": [], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 603}, {\"name\": \"Viper__name\", \"outputs\": [{\"type\": \"bytes32\", \"name\": \"out\"}], \"inputs\": [{\"type\": \"int128\", \"name\": \"arg0\"}], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 928}, {\"name\": \"Viper__dna\", \"outputs\": [{\"type\": \"uint256\", \"name\": \"out\"}], \"inputs\": [{\"type\": \"int128\", \"name\": \"arg0\"}], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 952}]'\n}\n\nexport default code"]},"metadata":{},"sourceType":"module"}