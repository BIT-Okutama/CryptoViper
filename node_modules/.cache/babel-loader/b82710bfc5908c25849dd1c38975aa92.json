{"ast":null,"code":"import _classCallCheck from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vincemillora/Documents/Blockchain/cryptoviper/src/BodyComponent/LessonComponent/Lesson_6.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nvar Lesson_6 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Lesson_6, _Component);\n\n  function Lesson_6() {\n    _classCallCheck(this, Lesson_6);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Lesson_6).apply(this, arguments));\n  }\n\n  _createClass(Lesson_6, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"tabheader center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        class: \"tabs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        class: \"tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        class: \"active\",\n        href: \"#lessonTab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"See Instructions Here\")), React.createElement(\"li\", {\n        class: \"tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#editorTab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"Write Your Answers Here\")))), React.createElement(\"div\", {\n        id: \"lessonTab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"chapterTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \" Chapter 7: Integer Operations \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Math in Vyper is pretty straightforward. The following operations are the same as in most programming languages:\"), React.createElement(\"p\", {\n        class: \"indent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"# Set: \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"x = y\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), \"# Addition: \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"x + y\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), \"# Subtraction: \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"x - y\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), \"# Multiplication: \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"x * y\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), \"# Division: \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"x / y\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), \"# Modulos: \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"x % y\"), \" \", React.createElement(\"div\", {\n        class: \"comments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"(for example, \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"13 % 5 \"), \"is \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"3\"), \", because if you divide 5 into 13, 3 is the remainder)\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), \"# Power: \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"x ** y\"), \" \", React.createElement(\"div\", {\n        class: \"comments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"(for example, \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"3 ** 2 \"), \"is \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"9\"), \", because 3 raise to the power of 2 is 9)\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Let's test it\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \" From the last lesson, we created a function where we can initialize our variables. In Vyper, we cannot initialize variables in the \", React.createElement(\"div\", {\n        class: \"terms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"top-level\"), \". Thus, we need functions where we can intialize our variables.\"), React.createElement(\"p\", {\n        class: \"indent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"1. Create a new variable \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"uint\"), \" and named it to \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"dnaModulos\"), \". 2. Inside \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"constructor\"), \", set the variables: \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"indent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"# \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"viperDNADigits\"), \" to 16 \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), \"# \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"dnaModulos\"), \" to 10 to the power of \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"viperDNADigits\")))), React.createElement(\"div\", {\n        id: \"editorTab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \" This is the editor, you can type your answer here. If your answer is correct, you can proceed to the next level. Good luck!\"), React.createElement(\"div\", {\n        class: \"editor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"tab-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"tab-pane active\",\n        id: \"editorTab\",\n        role: \"tabpanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"editor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })))), React.createElement(\"button\", {\n        type: \"button\",\n        id: \"compileBtn\",\n        class: \"cbtn cbtn1 right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Compile\"))), React.createElement(\"div\", {\n        class: \"lesson\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"lessonbody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"chapterTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \" Chapter 7: Integer Operations \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Math in Vyper is pretty straightforward. The following operations are the same as in most programming languages:\"), React.createElement(\"p\", {\n        class: \"indent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"# Set: \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"x = y\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), \"# Addition: \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"x + y\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), \"# Subtraction: \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"x - y\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), \"# Multiplication: \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"x * y\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), \"# Division: \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"x / y\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), \"# Modulos: \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"x % y\"), \" \", React.createElement(\"div\", {\n        class: \"comments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"(for example, \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"13 % 5 \"), \"is \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"3\"), \", because if you divide 5 into 13, 3 is the remainder)\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), \"# Power: \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"x ** y\"), \" \", React.createElement(\"div\", {\n        class: \"comments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"(for example, \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"3 ** 2 \"), \"is \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"9\"), \", because 3 raise to the power of 2 is 9)\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Let's test it\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \" From the last lesson, we created a function where we can initialize our variables. In Vyper, we cannot initialize variables in the \", React.createElement(\"div\", {\n        class: \"terms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"top-level\"), \". Thus, we need functions where we can intialize our variables.\"), React.createElement(\"p\", {\n        class: \"indent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"1. Create a new variable \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"uint\"), \" and named it to \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"dnaModulos\"), \". 2. Inside \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"constructor\"), \", set the variables: \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"indent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"# \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"viperDNADigits\"), \" to 16 \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), \"# \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"dnaModulos\"), \" to 10 to the power of \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"viperDNADigits\"))))), React.createElement(\"div\", {\n        class: \"editor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/lesson_7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        class: \"waves-effect waves-light btn green right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"material-icons right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"send\"), \"Check Answer\")), React.createElement(\"div\", {\n        class: \"tab-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"tab-pane active\",\n        id: \"editorTab\",\n        role: \"tabpanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"editor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }))), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Result: \")), React.createElement(\"footer\", {\n        class: \"footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        class: \"pagination right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        class: \"waves-effect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/lesson_5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"chevron_left\"))), React.createElement(\"li\", {\n        class: \"active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"7\")), React.createElement(\"li\", {\n        class: \"waves-effect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/lesson_8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"chevron_right\"))))));\n    }\n  }]);\n\n  return Lesson_6;\n}(Component);\n\nexport default Lesson_6;","map":{"version":3,"sources":["/Users/vincemillora/Documents/Blockchain/cryptoviper/src/BodyComponent/LessonComponent/Lesson_6.js"],"names":["React","Component","Link","Lesson_6"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Lesson_6 extends Component {\n  render() {\n    return (\n      <div>\n        <div class=\"body\">\n          <div class=\"tabheader center\">\n            <ul class=\"tabs\">\n              <li class=\"tab\"><a class=\"active\" href=\"#lessonTab\">See Instructions Here</a></li>\n              <li class=\"tab\"><a href=\"#editorTab\">Write Your Answers Here</a></li>\n            </ul>\n          </div>\n\n          <div id=\"lessonTab\">\n            <h5 class=\"chapterTitle\"> Chapter 7: Integer Operations </h5>\n            <p>Math in Vyper is pretty straightforward. The following operations are the same as in most programming languages:</p>\n            <p class=\"indent\">\n              # Set: <div class=\"types\">x = y</div><br></br>\n              # Addition: <div class=\"types\">x + y</div><br></br>\n              # Subtraction: <div class=\"types\">x - y</div><br></br>\n              # Multiplication: <div class=\"types\">x * y</div><br></br>\n              # Division: <div class=\"types\">x / y</div><br></br>\n              # Modulos: <div class=\"types\">x % y</div> <div class=\"comments\">(for example, <div class=\"types\">13 % 5 </div>is <div class=\"types\">3</div>, because if you divide 5 into 13, 3 is the remainder)</div><br></br>\n              # Power: <div class=\"types\">x ** y</div> <div class=\"comments\">(for example, <div class=\"types\">3 ** 2 </div>is <div class=\"types\">9</div>, because 3 raise to the power of 2 is 9)</div><br></br>\n            </p>\n\n            <br></br>\n            <h5>Let's test it</h5>\n            <p> From the last lesson, we created a function where we can initialize our variables. In Vyper, we cannot initialize variables in the <div class=\"terms\">top-level</div>. Thus, we need functions where we can intialize our variables.</p>\n\n            <p class=\"indent\"> \n              1. Create a new variable <div class=\"types\">uint</div> and named it to <div class=\"types\">dnaModulos</div>.\n              2. Inside <div class=\"types\">constructor</div>, set the variables: <br></br>\n              <div class=\"indent\"> \n                # <div class=\"types\">viperDNADigits</div> to 16 <br></br>\n                # <div class=\"types\">dnaModulos</div> to 10 to the power of <div class=\"types\">viperDNADigits</div>\n              </div>\n            </p>\n          </div>\n\n          <div id=\"editorTab\">\n            <p> This is the editor, you can type your answer here. If your answer is correct, you can proceed to the next level. Good luck!</p>\n            <div class=\"editor\">\n                <div class=\"tab-content\">\n                  <div class=\"tab-pane active\" id=\"editorTab\" role=\"tabpanel\">\n                    <div id=\"editor\"></div>\n                  </div>\n                </div>\n            </div>\n            <button type=\"button\" id=\"compileBtn\" class=\"cbtn cbtn1 right\">Compile</button>\n          </div>\n        </div>\n\n        <div class=\"lesson\">\n          <div class=\"lessonbody\">\n            <h5 class=\"chapterTitle\"> Chapter 7: Integer Operations </h5>\n            <p>Math in Vyper is pretty straightforward. The following operations are the same as in most programming languages:</p>\n            <p class=\"indent\">\n              # Set: <div class=\"types\">x = y</div><br></br>\n              # Addition: <div class=\"types\">x + y</div><br></br>\n              # Subtraction: <div class=\"types\">x - y</div><br></br>\n              # Multiplication: <div class=\"types\">x * y</div><br></br>\n              # Division: <div class=\"types\">x / y</div><br></br>\n              # Modulos: <div class=\"types\">x % y</div> <div class=\"comments\">(for example, <div class=\"types\">13 % 5 </div>is <div class=\"types\">3</div>, because if you divide 5 into 13, 3 is the remainder)</div><br></br>\n              # Power: <div class=\"types\">x ** y</div> <div class=\"comments\">(for example, <div class=\"types\">3 ** 2 </div>is <div class=\"types\">9</div>, because 3 raise to the power of 2 is 9)</div><br></br>\n            </p>\n\n            <br></br>\n            <h5>Let's test it</h5>\n            <p> From the last lesson, we created a function where we can initialize our variables. In Vyper, we cannot initialize variables in the <div class=\"terms\">top-level</div>. Thus, we need functions where we can intialize our variables.</p>\n\n            <p class=\"indent\"> \n              1. Create a new variable <div class=\"types\">uint</div> and named it to <div class=\"types\">dnaModulos</div>.\n              2. Inside <div class=\"types\">constructor</div>, set the variables: <br></br>\n              <div class=\"indent\"> \n                # <div class=\"types\">viperDNADigits</div> to 16 <br></br>\n                # <div class=\"types\">dnaModulos</div> to 10 to the power of <div class=\"types\">viperDNADigits</div>\n              </div>\n            </p>\n          </div>\n        </div>\n        <div class=\"editor\">\n          <Link to=\"/lesson_7\" ><a class=\"waves-effect waves-light btn green right\"><i class=\"material-icons right\">send</i>Check Answer</a></Link>\n          <div class=\"tab-content\">\n            <div class=\"tab-pane active\" id=\"editorTab\" role=\"tabpanel\">\n              <div id=\"editor\"></div>\n            </div>\n          </div>\n          <h5>Result: </h5>\n        </div>\n        <footer class=\"footer\">\n          <ul class=\"pagination right\">\n            <li class=\"waves-effect\"><Link to=\"/lesson_5\" ><i class=\"material-icons\">chevron_left</i></Link></li>\n            <li class=\"active\"><a href=\"#!\">7</a></li>\n            <li class=\"waves-effect\"><Link to=\"/lesson_8\" ><i class=\"material-icons\">chevron_right</i></Link></li>\n        </ul>\n        </footer>\n      </div>\n    )\n  }\n}\nexport default Lesson_6;"]},"metadata":{},"sourceType":"module"}