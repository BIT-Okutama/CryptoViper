{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\empty\\\\Documents\\\\IT\\\\CryptoViper\\\\cryptoviper\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\empty\\\\Documents\\\\IT\\\\CryptoViper\\\\cryptoviper\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\empty\\\\Documents\\\\IT\\\\CryptoViper\\\\cryptoviper\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\empty\\\\Documents\\\\IT\\\\CryptoViper\\\\cryptoviper\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\empty\\\\Documents\\\\IT\\\\CryptoViper\\\\cryptoviper\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\empty\\\\Documents\\\\IT\\\\CryptoViper\\\\cryptoviper\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\empty\\\\Documents\\\\IT\\\\CryptoViper\\\\cryptoviper\\\\src\\\\HeaderComponent\\\\NavBar.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nvar NavBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NavBar, _Component);\n\n  function NavBar(props) {\n    var _this;\n\n    _classCallCheck(this, NavBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NavBar).call(this, props));\n    _this.toggle = _this.toggleNavbar.bind(_assertThisInitialized(_assertThisInitialized(_this))); // https://www.w3schools.com/howto/howto_js_navbar_hide_scroll.asp\n\n    if (typeof window !== 'undefined') {\n      var prevScrollpos = window.pageYOffset;\n\n      window.onscroll = function () {\n        var maxScroll = document.body.clientHeight - window.innerHeight;\n        var currentScrollPos = window.pageYOffset;\n\n        if (maxScroll > 0 && prevScrollpos > currentScrollPos && prevScrollpos <= maxScroll || maxScroll <= 0 && prevScrollpos > currentScrollPos || prevScrollpos <= 0 && currentScrollPos <= 0) {\n          document.getElementById(\"navbar\").style.top = \"0\";\n        } else {\n          document.getElementById(\"navbar\").style.top = \"-5.0rem\"; // adjustable based your need\n        }\n\n        prevScrollpos = currentScrollPos;\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(NavBar, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"nav\", {\n        class: \"navbar navColor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/homepage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \" \", React.createElement(\"img\", {\n        class: \"logo\",\n        src: \"logo.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })), React.createElement(\"ul\", {\n        id: \"nav-mobile\",\n        class: \"right hide-on-med-and-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/homepage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Home \", React.createElement(\"i\", {\n        class: \"material-icons right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"home\"))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/lesson_1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Play \", React.createElement(\"i\", {\n        class: \"material-icons right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"toys\")))));\n    }\n  }]);\n\n  return NavBar;\n}(Component);\n\nexport default NavBar;","map":{"version":3,"sources":["C:\\Users\\empty\\Documents\\IT\\CryptoViper\\cryptoviper\\src\\HeaderComponent\\NavBar.js"],"names":["React","Component","Link","NavBar","props","toggle","toggleNavbar","bind","window","prevScrollpos","pageYOffset","onscroll","maxScroll","document","body","clientHeight","innerHeight","currentScrollPos","getElementById","style","top"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;;IAEMC,M;;;;;AACJ,kBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,gFAAMA,KAAN;AACA,UAAKC,MAAL,GAAc,MAAKC,YAAL,CAAkBC,IAAlB,uDAAd,CAFkB,CAIlB;;AACA,QAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,UAAIC,aAAa,GAAGD,MAAM,CAACE,WAA3B;;AACAF,MAAAA,MAAM,CAACG,QAAP,GAAkB,YAAY;AAC5B,YAAMC,SAAS,GAAGC,QAAQ,CAACC,IAAT,CAAcC,YAAd,GAA6BP,MAAM,CAACQ,WAAtD;AACA,YAAIC,gBAAgB,GAAGT,MAAM,CAACE,WAA9B;;AACA,YACKE,SAAS,GAAG,CAAZ,IAAiBH,aAAa,GAAGQ,gBAAjC,IAAqDR,aAAa,IAAIG,SAAvE,IACEA,SAAS,IAAI,CAAb,IAAkBH,aAAa,GAAGQ,gBADpC,IAEER,aAAa,IAAI,CAAjB,IAAsBQ,gBAAgB,IAAI,CAHhD,EAII;AACFJ,UAAAA,QAAQ,CAACK,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC,CAAwCC,GAAxC,GAA8C,GAA9C;AACD,SAND,MAMO;AACLP,UAAAA,QAAQ,CAACK,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC,CAAwCC,GAAxC,GAA8C,SAA9C,CADK,CACoD;AAC1D;;AACDX,QAAAA,aAAa,GAAGQ,gBAAhB;AACD,OAbD;AAcD;;AArBiB;AAsBnB;;;;6BAEQ;AACP,aACE;AAAK,QAAA,KAAK,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAuB;AAAK,QAAA,KAAK,EAAC,MAAX;AAAkB,QAAA,GAAG,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvB,CADF,EAEE;AAAI,QAAA,EAAE,EAAC,YAAP;AAAoB,QAAA,KAAK,EAAC,4BAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA2B;AAAG,QAAA,KAAK,EAAC,sBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA3B,CAAJ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA2B;AAAG,QAAA,KAAK,EAAC,sBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA3B,CAAJ,CAFF,CAFF,CADF;AASD;;;;EAnCkBhB,S;;AAqCrB,eAAeE,MAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass NavBar extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.toggle = this.toggleNavbar.bind(this);\r\n\r\n    // https://www.w3schools.com/howto/howto_js_navbar_hide_scroll.asp\r\n    if (typeof window !== 'undefined') {\r\n      let prevScrollpos = window.pageYOffset;\r\n      window.onscroll = function () {\r\n        const maxScroll = document.body.clientHeight - window.innerHeight;\r\n        let currentScrollPos = window.pageYOffset;\r\n        if (\r\n            (maxScroll > 0 && prevScrollpos > currentScrollPos && prevScrollpos <= maxScroll) \r\n          || (maxScroll <= 0 && prevScrollpos > currentScrollPos)\r\n          || (prevScrollpos <= 0 && currentScrollPos <= 0)\r\n          ) {\r\n          document.getElementById(\"navbar\").style.top = \"0\";\r\n        } else {\r\n          document.getElementById(\"navbar\").style.top = \"-5.0rem\"; // adjustable based your need\r\n        }\r\n        prevScrollpos = currentScrollPos;\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav class=\"navbar navColor\">\r\n        <Link to=\"/homepage\" > <img class=\"logo\" src=\"logo.png\"></img></Link>\r\n        <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\r\n          <li><Link to=\"/homepage\" >Home <i class=\"material-icons right\">home</i></Link></li>\r\n          <li><Link to=\"/lesson_1\" >Play <i class=\"material-icons right\">toys</i></Link></li>\r\n        </ul>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\nexport default NavBar;"]},"metadata":{},"sourceType":"module"}