{"ast":null,"code":"import _classCallCheck from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vincemillora/Documents/Blockchain/cryptoviper/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vincemillora/Documents/Blockchain/cryptoviper/src/BodyComponent/LessonComponent/Lesson_14.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nvar Lesson_14 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Lesson_14, _Component);\n\n  function Lesson_14() {\n    _classCallCheck(this, Lesson_14);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Lesson_14).call(this));\n  }\n\n  _createClass(Lesson_14, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"tabheader center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        class: \"tabs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        class: \"tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        class: \"active\",\n        href: \"#lessonTab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"See Instructions Here\")), React.createElement(\"li\", {\n        class: \"tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#editorTab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Write Your Answers Here\")))), React.createElement(\"div\", {\n        id: \"lessonTab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"chapterTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \" Chapter 13: Finishing Touches \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \" In this chapter, we're going to learn about \", React.createElement(\"div\", {\n        class: \"terms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Mappings\"), \". \"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        class: \"chapterTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \" Mappings \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \" Mappings in Vyper can be seen as \", React.createElement(\"div\", {\n        class: \"terms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"hash tables\"), \" which are virtually initialized such that every possible \", React.createElement(\"div\", {\n        class: \"terms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"key\"), \" exists and is mapped to a value. The key data is not actually stored in a mapping, only its \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"keccak256\"), \" hash used to look up the value. Because of this, mappings do not have a length or a concept of a key or value being \\u201Cset\\u201D. This is useful when you need to store data but you don't know how much data you need to store. Unlike in \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"List\"), \", you need to specify the number of data you want to store.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"This is how you declare a \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Map\"), \":\"), React.createElement(\"div\", {\n        class: \"codeblock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        class: \"codes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"mapTracker: \"), \" uint256 \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"comments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"# A struct with some attributes of a person.\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), \"Person: \", React.createElement(\"div\", {\n        class: \"views\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"public\"), \"({ \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), \"\\u2002\\u2002age: \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"uint256\"), \", \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), \"\\u2002\\u2002name: \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"bytes32\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), \"}[uint256])\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"The declaration is just the same with the \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"list\"), \", but we didn't specify the size. Instead we just specified that we will use \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"uint256\"), \" to track the size. We also declared a variable \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"mapTracker\"), \", this will track what the latest number we used for the \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Map\"), \". In short, \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"mapTracker\"), \" will keep track of the size of the \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Map\"), \". \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Let's test it\"), React.createElement(\"p\", {\n        class: \"indent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"1. Change our \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Viper\"), \" struct to a map. Use \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"uint256\"), \" to track the size. \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), \"2. Declare a \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"uint256\"), \" called \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"numberOfVipers\"), \". This will keep track of the size of the map. Initialize this variable in the constructor to 0. \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), \"3. In the \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"createViper\"), \" function, on the first line, increase \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"numberOfVipers\"), \" value by 1. Then change the \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Viper\"), \" index to \", React.createElement(\"div\", {\n        class: \"types\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"numberOfVipers\"), \" instead of 0.\")), React.createElement(\"div\", {\n        class: \"forms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(\"footer\", {\n        class: \"footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        class: \"pagination right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        class: \"waves-effect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/lesson_13\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"material-icons icon-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"chevron_left\"))), React.createElement(\"li\", {\n        class: \"active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"14\")), React.createElement(\"li\", {\n        class: \"waves-effect disabled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/lesson_14\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"material-icons transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"chevron_right\"))))));\n    }\n  }]);\n\n  return Lesson_14;\n}(Component);\n\nexport default Lesson_14;","map":{"version":3,"sources":["/Users/vincemillora/Documents/Blockchain/cryptoviper/src/BodyComponent/LessonComponent/Lesson_14.js"],"names":["React","Component","Link","Lesson_14"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Lesson_14 extends Component {\n  constructor() {\n    super()\n  }\n  \n  render() {\n    return (\n      <div>\n        <div class=\"body\">\n            <div class=\"tabheader center\">\n                <ul class=\"tabs\">\n                <li class=\"tab\"><a class=\"active\" href=\"#lessonTab\">See Instructions Here</a></li>\n                <li class=\"tab\"><a href=\"#editorTab\">Write Your Answers Here</a></li>\n                </ul>\n            </div>\n\n            <div id=\"lessonTab\">\n                <h5 class=\"chapterTitle\"> Chapter 13: Finishing Touches </h5>\n                <p> In this chapter, we're going to learn about <div class=\"terms\">Mappings</div>. </p> <br></br>\n\n                <h5 class=\"chapterTitle\"> Mappings </h5>\n                <p> Mappings in Vyper can be seen as <div class=\"terms\">hash tables</div> which are virtually initialized such that every possible <div class=\"terms\">key</div> exists and is mapped to a value. The key data is not actually stored in a mapping, only its <div class=\"types\">keccak256</div> hash used to look up the value. Because of this, mappings do not have a length or a concept of a key or value being “set”. This is useful when you need to store data but you don't know how much data you need to store. Unlike in <div class=\"types\">List</div>, you need to specify the number of data you want to store.</p>\n                \n                <p>This is how you declare a <div class=\"types\">Map</div>:</p>\n                <div class=\"codeblock\">\n                <p class=\"codes\">\n                    <div class=\"types\">mapTracker: </div> uint256 <br></br>\n                    <div class=\"comments\"># A struct with some attributes of a person.</div> <br></br>\n                    Person: <div class=\"views\">public</div>(&#123; <br></br>\n                    &ensp;&ensp;age: <div class=\"types\">uint256</div>, <br></br>\n                    &ensp;&ensp;name: <div class=\"types\">bytes32</div> <br></br>\n                    &#125;[uint256])\n                </p>\n                </div>\n                \n                <p>The declaration is just the same with the <div class=\"types\">list</div>, but we didn't specify the size. Instead we just specified that we will use <div class=\"types\">uint256</div> to track the size. We also declared a variable <div class=\"types\">mapTracker</div>, this will track what the latest number we used for the <div class=\"types\">Map</div>. In short, <div class=\"types\">mapTracker</div> will keep track of the size of the <div class=\"types\">Map</div>. </p>\n                <br></br>\n                <h5>Let's test it</h5>\n                <p class=\"indent\"> \n                1. Change our <div class=\"types\">Viper</div> struct to a map. Use <div class=\"types\">uint256</div> to track the size. <br></br><br></br>\n                2. Declare a <div class=\"types\">uint256</div> called <div class=\"types\">numberOfVipers</div>. This will keep track of the size of the map. Initialize this variable in the constructor to 0. <br></br><br></br>\n                3. In the <div class=\"types\">createViper</div> function, on the first line, increase <div class=\"types\">numberOfVipers</div> value by 1. Then change the <div class=\"types\">Viper</div> index to <div class=\"types\">numberOfVipers</div> instead of 0. \n                </p>\n            </div>\n\n            <div class=\"forms\">\n                \n            </div>\n        </div>\n\n        <footer class=\"footer\">\n          <ul class=\"pagination right\">\n            <li class=\"waves-effect\"><Link to=\"/lesson_13\" ><i class=\"material-icons icon-white\">chevron_left</i></Link></li>\n            <li class=\"active\"><a>14</a></li>\n            <li class=\"waves-effect disabled\"><Link to=\"/lesson_14\" ><i class=\"material-icons transparent\">chevron_right</i></Link></li>\n        </ul>\n        </footer>\n      </div>\n    )\n  }\n}\nexport default Lesson_14;"]},"metadata":{},"sourceType":"module"}